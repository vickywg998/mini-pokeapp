{"version":3,"sources":["Components/Random.js","assets/pokeball.png","Components/Pokedex.js","Components/Pokemon.js","App.js","index.js"],"names":["Random","useState","randomPokemon","setRandomPokemon","useEffect","k","axios","get","then","res","pokemons","JSON","parse","stringify","data","rand_ids","getRandomInts","randArr","i","id","push","name","results","max","length","number","Math","floor","random","includes","Card","Group","itemsPerRow","map","info","Content","className","Image","floated","size","src","Header","Meta","Pokedex","props","query","setQuery","search","setSearch","setResults","loading","setLoading","isError","setIsError","history","fetchData","a","fetch","response","json","Grid","centered","columns","Row","Pokeball","onSubmit","e","preventDefault","trim","toLowerCase","Input","type","placeholder","value","onChange","target","Button","height","weight","types","abilities","stats","undefined","wrapped","Description","ability","stat","onClick","loadPokemon","Pokemon","match","pokeID","params","pokemon","setPokemon","catch","error","colorStyles","electric","psychic","poison","ghost","colorless","dark","metal","water","grass","fire","fighting","ground","rock","sprites","front_default","back_default","back_shiny","front_shiny","Icon","Column","width","autoPlay","autoPlayInterval","style","Table","color","inverted","HeaderCell","Body","Cell","verticalAlign","Label","Statistic","widths","Value","base_stat","App","exact","path","component","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18e35615.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Card, Image } from \"semantic-ui-react\";\n\nfunction Random() {\n  const [randomPokemon, setRandomPokemon] = useState([]);\n\n  // getting a list of random results\n  const getRandomPokemon = (k) => {\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon/?limit=151&offset=0`)\n      .then((res) => {\n        var pokemons = JSON.parse(JSON.stringify(res.data));\n        var rand_ids = getRandomInts(151, k);\n\n        var randArr = [];\n        for (var i = 0; i < k; i++) {\n          var id = rand_ids[i];\n          randArr.push({ name: pokemons.results[id].name, id: id });\n        }\n        setRandomPokemon(randArr);\n      });\n  };\n\n  useEffect(() => {\n    getRandomPokemon(5);\n  }, []);\n\n  const getRandomInts = (max, k) => {\n    var res = [];\n    while (res.length < k) {\n      var number = Math.floor(Math.random() * Math.floor(max));\n      if (!res.includes(number)) {\n        res.push(number);\n      }\n    }\n    return res;\n  };\n\n  const randomPoke = () => {\n    return (\n      <Card.Group itemsPerRow={2}>\n        {randomPokemon.map((info) => {\n          return (\n            <Card key={info.id}>\n              <Card.Content className=\"random-pokemon-card\">\n                <Image\n                  floated=\"left\"\n                  size=\"tiny\"\n                  src={\n                    \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" +\n                    info.id +\n                    \".png\"\n                  }\n                  className=\"random-pokemon-img\"\n                />\n                <Card.Header className=\"random-header\">{info.name}</Card.Header>\n                <Card.Meta>{info.id}</Card.Meta>\n              </Card.Content>\n            </Card>\n          );\n        })}\n      </Card.Group>\n    );\n  };\n\n  return <div>{randomPoke()}</div>;\n}\n\nexport default Random;\n","export default __webpack_public_path__ + \"static/media/pokeball.62d6b79b.png\";","import React, { useState, useEffect } from \"react\";\nimport Random from \"./Random\";\nimport { Card, Button, Image, Grid, Input } from \"semantic-ui-react\";\nimport Pokeball from \"../assets/pokeball.png\";\n\nfunction Pokedex(props) {\n  const [query, setQuery] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [results, setResults] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { history } = props;\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch(\n          `https://pokeapi.co/api/v2/pokemon/${query}`\n        );\n        const data = await response.json();\n        setResults(data);\n        setIsError(false);\n      } catch (error) {\n        setIsError(true);\n      }\n      setLoading(false);\n    }\n    if (query !== \"mini-pokeapp\") {\n      fetchData();\n    }\n    fetchData();\n  }, [query]);\n\n  const loadPokemon = (results) => {\n    const { name, id, height, weight, types, abilities, stats } = results;\n    return (\n      <>\n        {name !== undefined && (\n          <Card className=\"pokedex-card\">\n            <Card.Content className=\"pokedex-card-content\">\n              <Card.Header>{name}</Card.Header>\n              <Image\n                src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`}\n                className=\"pokedex-card-image\"\n                wrapped\n              />\n              <Card.Meta>\n                Height: {height}' Weight: {weight} lbs\n              </Card.Meta>\n              <Card.Description>\n                <h5>Types:</h5>\n                {types.map((info) => {\n                  return <p key={info.type.name}> {`${info.type.name}`}</p>;\n                })} \n              </Card.Description>\n              <Card.Description>\n                <h5>Abilities: </h5>\n                {abilities.map((info) => {\n                  return (\n                    <p key={info.ability.name}> {`${info.ability.name}`}</p>\n                  );\n                })}\n              </Card.Description>\n              <Card.Description>\n                <h5> Base Stats:</h5>\n                {stats.map((info) => {\n                  return <p key={info.stat.name}> {`${info.stat.name}`}</p>;\n                })}\n              </Card.Description>\n            </Card.Content>\n            <Button onClick={() => history.push(`/mini-pokeapp/${id}`)}>\n              View more details\n            </Button>\n          </Card>\n        )}\n      </>\n    );\n  };\n\n  return (\n    <Grid centered columns={4}>\n      <Grid.Row>\n        <h1 className=\"pokedex-header\">Pokedex App</h1>\n      </Grid.Row>\n      <img src={Pokeball} className=\"pokedex-pokeball-sizing\" />\n      <Grid.Row>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            setQuery(search.trim().toLowerCase());\n          }}\n        >\n          <Input\n            type=\"text\"\n            placeholder=\"search...\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <Button type=\"submit\">Search</Button>\n        </form>\n      </Grid.Row>\n\n      <Grid.Row>\n        {isError && (\n          <div>Oops! Can't find this Pokemon, try searching another one?</div>\n        )}\n\n        {loading ? <h1>Loading...</h1> : loadPokemon(results)}\n      </Grid.Row>\n      <Grid.Row>\n        <h2> Random Pokemons of the Day!</h2>\n      </Grid.Row>\n      <Grid.Row>\n        <Random />\n      </Grid.Row>\n    </Grid>\n  );\n}\n\nexport default Pokedex;\n","import React, { useState, useEffect } from \"react\";\nimport { Grid, Table, Label, Icon, Statistic } from \"semantic-ui-react\";\nimport AliceCarousel from \"react-alice-carousel\";\nimport \"react-alice-carousel/lib/alice-carousel.css\";\nimport axios from \"axios\";\n\nfunction Pokemon(props) {\n  const { match, history } = props;\n  const { params } = match;\n  const { pokeID } = params;\n  const [pokemon, setPokemon] = useState(undefined);\n\n  useEffect(() => {\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokeID}/`)\n      .then((res) => {\n        const { data } = res;\n        setPokemon(data);\n      })\n      .catch((error) => {\n        setPokemon(false);\n      });\n  }, [pokeID]);\n\n  const colorStyles = {\n    electric: \"yellow\",\n    psychic: \"purple\",\n    poison: \"purple\",\n    ghost: \"purple\",\n    colorless: \"white\",\n    dark: \"black\",\n    metal: \"grey\",\n    water: \"blue\",\n    grass: \"green\",\n    fire: \"red\",\n    fighting: \"brown\",\n    ground: \"brown\",\n    rock: \"brown\",\n  };\n\n  const loadPokemon = (pokemon) => {\n    const { name, id, height, weight, abilities, sprites,stats,types } = pokemon;\n\n    const { front_default, back_default, back_shiny, front_shiny } = sprites;\n\n    return (\n      <>\n        <Grid>\n          <Grid.Row centered>\n            <div className=\"pokemon-header\">\n              <img src={front_default} /> <h2>{`${name} #${id}`}</h2>\n            </div>\n          </Grid.Row>\n          <div className=\"pokemon-arrow\">\n            <Icon\n              name=\"arrow left\"\n              size=\"big\"\n              onClick={() => history.push(\"/mini-pokeapp/\")}\n            />\n          </div>\n          <Grid.Row centered>\n            <Grid.Column width={7}>\n              <AliceCarousel autoPlay autoPlayInterval=\"3000\">\n                <img\n                  style={{ height: \"300px\" }}\n                  src={front_default}\n                  className=\"pokemon-img-container\"\n                />\n                <img\n                  style={{ height: \"300px\" }}\n                  src={front_shiny}\n                  className=\"pokemon-img-container\"\n                />\n\n                <img\n                  style={{ height: \"300px\" }}\n                  src={back_default}\n                  className=\"pokemon-img-container\"\n                />\n                <img\n                  style={{ height: \"300px\" }}\n                  src={back_shiny}\n                  className=\"pokemon-img-container\"\n                />\n              </AliceCarousel>\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Table color=\"yellow\" key=\"yellow\" inverted>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Height</Table.HeaderCell>\n                    <Table.HeaderCell>Weight</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell>{height}'</Table.Cell>\n                    <Table.Cell>{weight} lbs</Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell> Abilites:</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell verticalAlign=\"top\">\n                      {abilities.map((info) => {\n                        return (\n                          <div key={info.ability.name}>\n                            {`${info.ability.name}`}\n                          </div>\n                        );\n                      })}\n                    </Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n              </Table>\n              <h3 className=\"pokemon-types-header\">Types</h3>\n              {types.map((info) => {\n                return (\n                  <Label\n                    color={colorStyles[info.type.name]}\n                    key={info.type.name}\n                    size=\"big\"\n                  >\n                    {info.type.name}\n                  </Label>\n                );\n              })}\n            </Grid.Column>\n          </Grid.Row>\n\n          <Grid.Row centered className=\"pokemon-stats-container\">\n            <h3>Stats</h3>\n            <Statistic.Group inverted widths={14}>\n              {stats.map((info) => {\n                return (\n                  <Statistic key={info.stat.name}>\n                    <Statistic.Value>{info.base_stat}</Statistic.Value>\n                    <Statistic.Label>{info.stat.name}</Statistic.Label>\n                  </Statistic>\n                );\n              })}\n            </Statistic.Group>\n          </Grid.Row>\n        </Grid>\n      </>\n    );\n  };\n\n  return (\n    <>\n      {pokemon === undefined && <p>loading</p>}\n      {pokemon !== undefined && pokemon && loadPokemon(pokemon)}\n      {pokemon === false && <p>Sorry, there's no such Pokemon!</p>}\n    </>\n  );\n}\n\nexport default Pokemon;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\"\nimport Pokedex from \"./Components/Pokedex\";\nimport Pokemon from \"./Components/Pokemon\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/mini-pokeapp\" component={Pokedex} />\n        <Route\n          exact\n          path=\"/mini-pokeapp/:pokeID\"\n          render={(props) => <Pokemon {...props} />}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}